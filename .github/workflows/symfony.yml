name: Symfony

on:
  push:
    branches:
      - "*"  # Toutes les branches
  pull_request:
    branches:
      - "*"  # Toutes les branches

permissions:
  contents: read

jobs:
  symfony-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: ['8.2']  # Matrice avec plusieurs versions de PHP
    services:
      db_certification:
        image: mysql
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: certification_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}

      - name: Install Composer Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Cache Composer packages
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ matrix.php-version }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-${{ matrix.php-version }}-

      - name: Create .env.test.local
        run: |
          cp .env .env.test.local
          echo "DATABASE_URL=db_certification://root:root@127.0.0.1:3306/certification_test" >> .env.test.local

      - name: Wait for MySQL to be ready
        run: sudo apt-get install -y mysql-client && until mysqladmin ping --host=127.0.0.1 --user=root --password=root --silent; do sleep 1; done

      - name: Run Doctrine Migrations
        run: php bin/console doctrine:migrations:migrate --no-interaction

      - name: Load Schema (if migrations are not available)
        run: php bin/console doctrine:schema:update --force

      # (Optionnel) Charger des fixtures si n√©cessaire
      # - name: Load Doctrine Fixtures
      #   run: php bin/console doctrine:fixtures:load --no-interaction

      - name: Execute tests (Unit and Feature tests)
        run: php bin/phpunit
